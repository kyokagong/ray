// Copyright 2017 The Ray Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: runtime_env_common.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RuntimeEnvUris struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / working dir uri
	WorkingDirUri string `protobuf:"bytes,1,opt,name=working_dir_uri,json=workingDirUri,proto3" json:"working_dir_uri,omitempty"`
	// / python modules uris
	PyModulesUris []string `protobuf:"bytes,2,rep,name=py_modules_uris,json=pyModulesUris,proto3" json:"py_modules_uris,omitempty"`
}

func (x *RuntimeEnvUris) Reset() {
	*x = RuntimeEnvUris{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_env_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeEnvUris) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeEnvUris) ProtoMessage() {}

func (x *RuntimeEnvUris) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_env_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeEnvUris.ProtoReflect.Descriptor instead.
func (*RuntimeEnvUris) Descriptor() ([]byte, []int) {
	return file_runtime_env_common_proto_rawDescGZIP(), []int{0}
}

func (x *RuntimeEnvUris) GetWorkingDirUri() string {
	if x != nil {
		return x.WorkingDirUri
	}
	return ""
}

func (x *RuntimeEnvUris) GetPyModulesUris() []string {
	if x != nil {
		return x.PyModulesUris
	}
	return nil
}

// / The runtime env config, include some fields that do not
// / participate in the calculation of the runtime_env hash.
type RuntimeEnvConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / The timeout of runtime env creation.
	SetupTimeoutSeconds int32 `protobuf:"varint,1,opt,name=setup_timeout_seconds,json=setupTimeoutSeconds,proto3" json:"setup_timeout_seconds,omitempty"`
	// / Indicates whether to install runtime env eagerly before the workers are leased.
	EagerInstall bool `protobuf:"varint,2,opt,name=eager_install,json=eagerInstall,proto3" json:"eager_install,omitempty"`
	// / A list of files to stream the runtime env setup logs to.
	LogFiles []string `protobuf:"bytes,3,rep,name=log_files,json=logFiles,proto3" json:"log_files,omitempty"`
}

func (x *RuntimeEnvConfig) Reset() {
	*x = RuntimeEnvConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_env_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeEnvConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeEnvConfig) ProtoMessage() {}

func (x *RuntimeEnvConfig) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_env_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeEnvConfig.ProtoReflect.Descriptor instead.
func (*RuntimeEnvConfig) Descriptor() ([]byte, []int) {
	return file_runtime_env_common_proto_rawDescGZIP(), []int{1}
}

func (x *RuntimeEnvConfig) GetSetupTimeoutSeconds() int32 {
	if x != nil {
		return x.SetupTimeoutSeconds
	}
	return 0
}

func (x *RuntimeEnvConfig) GetEagerInstall() bool {
	if x != nil {
		return x.EagerInstall
	}
	return false
}

func (x *RuntimeEnvConfig) GetLogFiles() []string {
	if x != nil {
		return x.LogFiles
	}
	return nil
}

// / The runtime env information which is transferred between ray core processes.
type RuntimeEnvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / The serialized runtime env passed from the user.
	SerializedRuntimeEnv string `protobuf:"bytes,1,opt,name=serialized_runtime_env,json=serializedRuntimeEnv,proto3" json:"serialized_runtime_env,omitempty"`
	// / URIs used in this runtime env. These will be used for reference counting.
	Uris *RuntimeEnvUris `protobuf:"bytes,2,opt,name=uris,proto3" json:"uris,omitempty"`
	// / The serialized runtime env config passed from the user.
	RuntimeEnvConfig *RuntimeEnvConfig `protobuf:"bytes,3,opt,name=runtime_env_config,json=runtimeEnvConfig,proto3" json:"runtime_env_config,omitempty"`
}

func (x *RuntimeEnvInfo) Reset() {
	*x = RuntimeEnvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_env_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeEnvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeEnvInfo) ProtoMessage() {}

func (x *RuntimeEnvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_env_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeEnvInfo.ProtoReflect.Descriptor instead.
func (*RuntimeEnvInfo) Descriptor() ([]byte, []int) {
	return file_runtime_env_common_proto_rawDescGZIP(), []int{2}
}

func (x *RuntimeEnvInfo) GetSerializedRuntimeEnv() string {
	if x != nil {
		return x.SerializedRuntimeEnv
	}
	return ""
}

func (x *RuntimeEnvInfo) GetUris() *RuntimeEnvUris {
	if x != nil {
		return x.Uris
	}
	return nil
}

func (x *RuntimeEnvInfo) GetRuntimeEnvConfig() *RuntimeEnvConfig {
	if x != nil {
		return x.RuntimeEnvConfig
	}
	return nil
}

type RuntimeEnvState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / The serialized runtime env.
	RuntimeEnv string `protobuf:"bytes,1,opt,name=runtime_env,json=runtimeEnv,proto3" json:"runtime_env,omitempty"`
	// / Total reference count (actors/tasks/jobs that use runtime env) of the runtime env.
	RefCnt int64 `protobuf:"varint,2,opt,name=ref_cnt,json=refCnt,proto3" json:"ref_cnt,omitempty"`
	// / Whether or not the runtime env creation has succeeded.
	Success *bool `protobuf:"varint,3,opt,name=success,proto3,oneof" json:"success,omitempty"`
	// / Set if success == False. Contains the error message regarding why runtime
	// / env creation has failed.
	Error *string `protobuf:"bytes,4,opt,name=error,proto3,oneof" json:"error,omitempty"`
	// / The time to create a runtime env in ms.
	CreationTimeMs *int64 `protobuf:"varint,5,opt,name=creation_time_ms,json=creationTimeMs,proto3,oneof" json:"creation_time_ms,omitempty"`
}

func (x *RuntimeEnvState) Reset() {
	*x = RuntimeEnvState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_runtime_env_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeEnvState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeEnvState) ProtoMessage() {}

func (x *RuntimeEnvState) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_env_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeEnvState.ProtoReflect.Descriptor instead.
func (*RuntimeEnvState) Descriptor() ([]byte, []int) {
	return file_runtime_env_common_proto_rawDescGZIP(), []int{3}
}

func (x *RuntimeEnvState) GetRuntimeEnv() string {
	if x != nil {
		return x.RuntimeEnv
	}
	return ""
}

func (x *RuntimeEnvState) GetRefCnt() int64 {
	if x != nil {
		return x.RefCnt
	}
	return 0
}

func (x *RuntimeEnvState) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *RuntimeEnvState) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *RuntimeEnvState) GetCreationTimeMs() int64 {
	if x != nil && x.CreationTimeMs != nil {
		return *x.CreationTimeMs
	}
	return 0
}

var File_runtime_env_common_proto protoreflect.FileDescriptor

var file_runtime_env_common_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x61, 0x79, 0x2e,
	0x72, 0x70, 0x63, 0x22, 0x60, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e,
	0x76, 0x55, 0x72, 0x69, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x69, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x55, 0x72, 0x69, 0x12, 0x26, 0x0a,
	0x0f, 0x70, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x79, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x55, 0x72, 0x69, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65,
	0x74, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x61, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x72, 0x69,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x55, 0x72, 0x69, 0x73,
	0x52, 0x04, 0x75, 0x72, 0x69, 0x73, 0x12, 0x47, 0x0a, 0x12, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x65, 0x6e, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0xdf, 0x01, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x76, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65,
	0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x76, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x5f, 0x63, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x66, 0x43, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x4d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d,
	0x73, 0x42, 0x57, 0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x72, 0x61, 0x79, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5a, 0x38, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x79, 0x2d, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x72, 0x61, 0x79, 0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0xf8, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_runtime_env_common_proto_rawDescOnce sync.Once
	file_runtime_env_common_proto_rawDescData = file_runtime_env_common_proto_rawDesc
)

func file_runtime_env_common_proto_rawDescGZIP() []byte {
	file_runtime_env_common_proto_rawDescOnce.Do(func() {
		file_runtime_env_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_runtime_env_common_proto_rawDescData)
	})
	return file_runtime_env_common_proto_rawDescData
}

var file_runtime_env_common_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_runtime_env_common_proto_goTypes = []any{
	(*RuntimeEnvUris)(nil),   // 0: ray.rpc.RuntimeEnvUris
	(*RuntimeEnvConfig)(nil), // 1: ray.rpc.RuntimeEnvConfig
	(*RuntimeEnvInfo)(nil),   // 2: ray.rpc.RuntimeEnvInfo
	(*RuntimeEnvState)(nil),  // 3: ray.rpc.RuntimeEnvState
}
var file_runtime_env_common_proto_depIdxs = []int32{
	0, // 0: ray.rpc.RuntimeEnvInfo.uris:type_name -> ray.rpc.RuntimeEnvUris
	1, // 1: ray.rpc.RuntimeEnvInfo.runtime_env_config:type_name -> ray.rpc.RuntimeEnvConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_runtime_env_common_proto_init() }
func file_runtime_env_common_proto_init() {
	if File_runtime_env_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_runtime_env_common_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RuntimeEnvUris); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runtime_env_common_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RuntimeEnvConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runtime_env_common_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RuntimeEnvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_runtime_env_common_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RuntimeEnvState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_runtime_env_common_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_runtime_env_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_runtime_env_common_proto_goTypes,
		DependencyIndexes: file_runtime_env_common_proto_depIdxs,
		MessageInfos:      file_runtime_env_common_proto_msgTypes,
	}.Build()
	File_runtime_env_common_proto = out.File
	file_runtime_env_common_proto_rawDesc = nil
	file_runtime_env_common_proto_goTypes = nil
	file_runtime_env_common_proto_depIdxs = nil
}
